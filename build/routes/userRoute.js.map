{"version":3,"sources":["../../backend/routes/userRoute.js"],"names":["router","express","Router","post","req","res","body","password","rePassword","user","User","name","email","description","save","err","newUser","status","send","msg","_id","id","isAdmin","token","put","isAuth","findById","params","foundUser","message","findOne","signinUser","get","find","foundUsers","console","log","error"],"mappings":"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","sourcesContent":["import express from \"express\";\r\nimport User from \"../models/userModel\"\r\nimport { getToken, isAuth } from \"../util\";\r\nconst router = express.Router();\r\n\r\nrouter.post(\"/register\", async (req,res) =>{\r\n    if(req.body.password === req.body.rePassword) {\r\n        const user = new User({\r\n            name: req.body.name,\r\n            email:req.body.email,\r\n            password:req.body.password,\r\n            rePassword:req.body.rePassword,\r\n            description: req.body.description \r\n        });\r\n        user.save((err, newUser) => {\r\n            if(err) {\r\n                return res.status(401).send({msg: \"Invalid User Data\"});\r\n            }\r\n            res.send({\r\n                _id: newUser.id,\r\n                name: newUser.name,\r\n                email: newUser.email,\r\n                isAdmin: newUser.isAdmin, \r\n                description:newUser.description,\r\n                token: getToken(newUser)\r\n            })        \r\n        });\r\n    }else{\r\n        res.status(401).send({msg: \"password confirmation failed\"});    \r\n    }\r\n});\r\n\r\nrouter.put(\"/register/:id\", isAuth, async (req, res) => {\r\n    const user = await User.findById(req.params.id);\r\n        user.name = req.body.name;\r\n        user.email = req.body.email;\r\n        user.description = req.body.description;\r\n        \r\n        user.save((err, foundUser) => {\r\n            if(err){\r\n                return res.status(500).send({message: \"Error while updating User Profile\"});\r\n            }\r\n            return res.send ({\r\n                _id: foundUser.id,\r\n                name: foundUser.name,\r\n                email: foundUser.email,\r\n                description: foundUser.description,\r\n                token: getToken(foundUser),\r\n                isAdmin: foundUser.isAdmin\r\n            })        \r\n        });\r\n    });\r\n\r\nrouter.post(\"/signin\", async (req,res) =>{\r\n    const signinUser = await User.findOne({\r\n        email:req.body.email,\r\n        password:req.body.password\r\n    });\r\n    if(signinUser) {\r\n        res.send({\r\n            _id: signinUser.id,\r\n            name: signinUser.name,\r\n            email: signinUser.email,\r\n            isAdmin: signinUser.isAdmin,\r\n            description: signinUser.description,\r\n            token: getToken(signinUser)\r\n        })\r\n    } else {\r\n        res.status(401).send({msg: \"Invalid email or password.\"});\r\n    }\r\n});\r\n\r\nrouter.get(\"/allusers\", async (req, res) => {\r\n    User.find({}, (err, foundUsers) => {\r\n        if(err){\r\n            console.log(error);\r\n        }else{\r\n            res.send(foundUsers);\r\n        }\r\n    })\r\n});\r\n    \r\nrouter.get(\"/createadmin\", async (req,res) =>{\r\n    const user = new User({\r\n        name: \"Yhinkus\",\r\n        email: \"wakeelmujeeb@yahoo.com\",\r\n        password:\"kaywhy\",\r\n        rePassword:\"kaywhy\",\r\n        description: \"I am someone who was born to succeed, add values to others and make them see the world in good ways\",\r\n        isAdmin: true\r\n    });\r\n    user.save((err, newUser) => {\r\n        if(err) {\r\n            return res.status(401).send({msg: \"Invalid User Data\"});\r\n        } else {\r\n            res.send(newUser);\r\n        }\r\n    });\r\n});\r\n\r\n    \r\n\r\nexport default router;"],"file":"userRoute.js"}
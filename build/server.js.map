{"version":3,"sources":["../backend/server.js"],"names":["dotenv","config","mongodbUrl","MONGODB_URL","mongoose","connect","useNewUrlParser","useUnifiedTopology","useCreateIndex","error","console","log","message","app","port","process","env","PORT","use","bodyParser","json","urlencoded","extended","express","path","join","__dirname","userRoute","productRoute","get","req","res","send","NODE_ENV","listen"],"mappings":";;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAEAA,mBAAOC,MAAP;;AAEA,IAAMC,UAAU,GAAGD,mBAAOE,WAA1B;;AACAC,qBAASC,OAAT,CAAiBH,UAAjB,EAA6B;AACzBI,EAAAA,eAAe,EAAE,IADQ;AAEzBC,EAAAA,kBAAkB,EAAE,IAFK;AAGzBC,EAAAA,cAAc,EAAE;AAHS,CAA7B,WAIS,UAAAC,KAAK;AAAA,SAAIC,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,OAAlB,CAAJ;AAAA,CAJd;;AAMA,IAAMC,GAAG,GAAG,0BAAZ;AACA,IAAMC,IAAI,GAAGC,OAAO,CAACC,GAAR,CAAYC,IAAZ,IAAoB,IAAjC;AAEAJ,GAAG,CAACK,GAAJ,CAAQC,uBAAWC,IAAX,EAAR;AACAP,GAAG,CAACK,GAAJ,CAAQC,uBAAWE,UAAX,CAAsB;AAACC,EAAAA,QAAQ,EAAE;AAAX,CAAtB,CAAR;AAEAT,GAAG,CAACK,GAAJ,CAAQK,8BAAeC,iBAAKC,IAAL,CAAUC,SAAV,EAAqB,mBAArB,CAAf,CAAR;AAEAb,GAAG,CAACK,GAAJ,CAAQ,YAAR,EAAsBS,qBAAtB;AACAd,GAAG,CAACK,GAAJ,CAAQ,eAAR,EAAyBU,wBAAzB;AAEAf,GAAG,CAACgB,GAAJ,CAAQ,GAAR,EAAa,UAASC,GAAT,EAAaC,GAAb,EAAkB;AACvBA,EAAAA,GAAG,CAACC,IAAJ,CAAST,8BAAeC,iBAAKC,IAAL,CAAUC,SAAV,EAAqB,6BAArB,CAAf,CAAT;AACH,CAFL;;AAIA,IAAGX,OAAO,CAACC,GAAR,CAAYiB,QAAZ,KAAyB,YAA5B,EAA0C;AACtCpB,EAAAA,GAAG,CAACK,GAAJ,CAAQK,8BAAeC,iBAAKC,IAAL,CAAUC,SAAV,EAAqB,mBAArB,CAAf,CAAR;AACAb,EAAAA,GAAG,CAACgB,GAAJ,CAAQ,GAAR,EAAa,UAASC,GAAT,EAAaC,GAAb,EAAkB;AAC3BA,IAAAA,GAAG,CAACC,IAAJ,CAAST,8BAAeC,iBAAKC,IAAL,CAAUC,SAAV,EAAqB,6BAArB,CAAf,CAAT;AACH,GAFD;AAGH;;AAIDb,GAAG,CAACqB,MAAJ,CAAWpB,IAAX,EAAiB,YAAM;AACnBJ,EAAAA,OAAO,CAACC,GAAR,CAAY,gCAAZ;AACH,CAFD","sourcesContent":["import express from \"express\"\r\nimport dotenv from \"dotenv\";\r\nimport config from \"./config\";\r\nimport mongoose from \"mongoose\"\r\nimport bodyParser from \"body-parser\"\r\nimport path from \"path\"\r\nimport userRoute from \"./routes/userRoute\"\r\nimport productRoute from \"./routes/productRoute\"\r\n\r\ndotenv.config();\r\n\r\nconst mongodbUrl = config.MONGODB_URL;\r\nmongoose.connect(mongodbUrl, {\r\n    useNewUrlParser: true,\r\n    useUnifiedTopology: true,\r\n    useCreateIndex: true\r\n}).catch(error => console.log(error.message));\r\n\r\nconst app = express();\r\nconst port = process.env.PORT || 5000;\r\n\r\napp.use(bodyParser.json());\r\napp.use(bodyParser.urlencoded({extended: true}))\r\n\r\napp.use(express.static(path.join(__dirname, '../frontend/build')));\r\n\r\napp.use(\"/api/users\", userRoute);\r\napp.use(\"/api/products\", productRoute);\r\n\r\napp.get(\"*\", function(req,res) {\r\n        res.send(express.static(path.join(__dirname, '..frontend/build/index.html')))\r\n    });\r\n\r\nif(process.env.NODE_ENV === \"production\") {\r\n    app.use(express.static(path.join(__dirname, '../frontend/build')));\r\n    app.get(\"*\", function(req,res) {\r\n        res.send(express.static(path.join(__dirname, '..frontend/build/index.html')))\r\n    });\r\n}\r\n\r\n\r\n\r\napp.listen(port, () => {\r\n    console.log(\"The backend server has started\");\r\n})"],"file":"server.js"}